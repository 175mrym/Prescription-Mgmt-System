/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pharmacymanagementsystem.GUI;

import com.mycompany.pharmacymanagementsystem.DAO.*;
import com.mycompany.pharmacymanagementsystem.Model.*;
import java.awt.*;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
//google grapjh

/**
 *
 * @author maryamwaleed
 */
public class MedicineGUI extends javax.swing.JFrame {

    /**
     * Creates new form MedicineGUI
     */
    public MedicineGUI() {
        initComponents();
        populateFormat();
        populateUnitsize();
        populateItemID();
        getContentPane().setBackground(Color.decode("#FFFFFF")); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLblTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCbMedID = new javax.swing.JComboBox<>();
        jTfDose = new javax.swing.JTextField();
        jCbFormat = new javax.swing.JComboBox<>();
        jCbUZ = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jBtnAdd = new javax.swing.JButton();
        jBtnUpdate = new javax.swing.JButton();
        jBtnShowAll = new javax.swing.JButton();
        jLblStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(213, 217, 224));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N

        jLblTitle.setFont(new java.awt.Font("Big Caslon", 1, 18)); // NOI18N
        jLblTitle.setText("Medicine Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(131, Short.MAX_VALUE)
                .addComponent(jLblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(213, 217, 224));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jLabel1.setText("Medicine ID:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 90, -1));

        jLabel6.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jLabel6.setText("Dosage");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel7.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jLabel7.setText("Format");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel8.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jLabel8.setText("Unit size");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jCbMedID.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jCbMedID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(jCbMedID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 280, -1));

        jTfDose.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jTfDose.setText(" ");
        jPanel2.add(jTfDose, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 280, -1));

        jCbFormat.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jCbFormat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(jCbFormat, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 280, -1));

        jCbUZ.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N
        jCbUZ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(jCbUZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 280, -1));

        jScrollPane1.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(213, 217, 224));
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBackground(new java.awt.Color(213, 217, 224));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setFont(new java.awt.Font("Big Caslon", 0, 13)); // NOI18N

        jBtnAdd.setBackground(new java.awt.Color(166, 201, 218));
        jBtnAdd.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        jBtnAdd.setText("Add");
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        jBtnUpdate.setBackground(new java.awt.Color(166, 201, 218));
        jBtnUpdate.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        jBtnUpdate.setText("Update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        jBtnShowAll.setBackground(new java.awt.Color(166, 201, 218));
        jBtnShowAll.setFont(new java.awt.Font("Didot", 1, 14)); // NOI18N
        jBtnShowAll.setText("Show All");
        jBtnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnShowAllActionPerformed(evt);
            }
        });

        jLblStatus.setBackground(new java.awt.Color(213, 217, 224));
        jLblStatus.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLblStatus.setText("Status: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jBtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnShowAll, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)))
                .addGap(53, 53, 53))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jBtnAdd)
                .addGap(18, 18, 18)
                .addComponent(jBtnUpdate)
                .addGap(18, 18, 18)
                .addComponent(jBtnShowAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        
    float dose = 0;

    String selecetedID = (String) jCbMedID.getSelectedItem();
    String selecetedFrmt = (String) jCbFormat.getSelectedItem();     
    String doseText = jTfDose.getText().trim();
    String selecetedUZ = (String) jCbUZ.getSelectedItem();

    if (doseText.isEmpty() || selecetedID.equals("--Select ID--") || selecetedUZ.equals("--Select Unit Size--") || selecetedFrmt.equals("--Select Format--")) {
        jLblStatus.setText("Please enter/select all required data!");
        return;
    }

    try {
        dose = Float.parseFloat(doseText);
    } catch (NumberFormatException e) {
        jLblStatus.setText("Error while converting to double. Make sure to enter numbers");
        return;
    }

    Medicine medicine = new Medicine(); // Create a new Medicine object
    medicine.setID(selecetedID);
    medicine.setDosage(dose);
    medicine.setFormat(selecetedFrmt);
    medicine.setUnitSize(selecetedUZ);

    MedicineDAO medicineDAO = new MedicineDAO();
    try {
        int insertStatus = medicineDAO.addMedicine(medicine);

        if (insertStatus > 0) {
            jLblStatus.setText("Medicine " + selecetedID + " has been successfully added!");
        } else {
            jLblStatus.setText("Failed to add Medicine " + selecetedID);
        }
    } catch (SQLException e) {
        jLblStatus.setText("Database Error: " + e.getMessage());
    }

    }//GEN-LAST:event_jBtnAddActionPerformed

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
            String selectedID = (String) jCbMedID.getSelectedItem();
    String selectedFormat = (String) jCbFormat.getSelectedItem();
    String selectedUZ = (String) jCbUZ.getSelectedItem();
    String doseText = jTfDose.getText().trim();

    if (selectedID.equals("--Select ID--") || selectedFormat.equals("--Select Format--") || selectedUZ.equals("--Select Unit Size--") || doseText.isEmpty()) {
        jLblStatus.setText("Please select a medicine and enter all required data!");
        return;
    }

    float newDose;
    try {
        newDose = Float.parseFloat(doseText);
    } catch (NumberFormatException e) {
        jLblStatus.setText("Error while converting to float. Make sure to enter numbers");
        return;
    }

    MedicineDAO medicineDAO = new MedicineDAO();
    try {
        Medicine medicineToUpdate = medicineDAO.findMedicineById(selectedID);
        if (medicineToUpdate != null) {
            // Update the medicine details
            medicineToUpdate.setDosage(newDose);
            medicineToUpdate.setFormat(selectedFormat);
            medicineToUpdate.setUnitSize(selectedUZ);

            // Perform the update operation
            int updateStatus = medicineDAO.updateMedicine(medicineToUpdate);

            if (updateStatus > 0) {
                jLblStatus.setText("Medicine " + selectedID + " has been successfully updated!");
            } else {
                jLblStatus.setText("Failed to update Medicine " + selectedID);
            }
        } else {
            jLblStatus.setText("Medicine not found with ID: " + selectedID);
        }
    } catch (SQLException e) {
        jLblStatus.setText("Database Error: " + e.getMessage());
    }
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jBtnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnShowAllActionPerformed
        // TODO add your handling code here:
        loadAllMeds();
    }//GEN-LAST:event_jBtnShowAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicineGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicineGUI().setVisible(true);
            }
        });
    }
    
private final void populateItemID() {
    //I SHOULD SELECT ONLY MEDICINES!
    try {
        ItemDAO itemDAO = new ItemDAO();
        java.util.List<Medicine> iList = itemDAO.getAllMedicines(); 
        String[] defaultOption = new String[]{"--Select ID--"};
        jCbMedID.setModel(new DefaultComboBoxModel<>(defaultOption));
        for (Item i : iList) {
            jCbMedID.addItem(i.getID());
        }
    } catch (SQLException sqlex) {
        jLblStatus.setText(sqlex.getMessage());
    }
}
private final void populateFormat() {
    try {
        MedicineDAO medicineDAO = new MedicineDAO();
        java.util.List<Medicine> mList = medicineDAO.getAllMedicines(); 
        String[] defaultOption = new String[]{"--Select Format--"};
        jCbFormat.setModel(new DefaultComboBoxModel<>(defaultOption));
        for (Medicine m : mList) {
            jCbFormat.addItem(m.getFormat());
        }
    } catch (SQLException sqlex) {
        jLblStatus.setText(sqlex.getMessage());
    }
}
private final void populateUnitsize() {
    try {
        MedicineDAO medicineDAO = new MedicineDAO();
        java.util.List<Medicine> mList = medicineDAO.getAllMedicines(); 
        String[] defaultOption = new String[]{"--Select Unit Size--"};
        jCbUZ.setModel(new DefaultComboBoxModel<>(defaultOption));
        for (Medicine m : mList) {
            jCbUZ.addItem(m.getUnitSize());
        }
    } catch (SQLException sqlex) {
        jLblStatus.setText(sqlex.getMessage());
    }
}

      private final void loadAllMeds() {
    Vector colNameV = new Vector();
    colNameV.add("Med ID");
    colNameV.add("Med Name");
    colNameV.add("Med Dosage");
    colNameV.add("Med Format");
    colNameV.add("Med Unit Size");
    

    //Step 2: set the rows of jtable
    MedicineDAO medicineDAO = new MedicineDAO();
    java.util.List<Medicine> mList = null; // Initialize a list to store item data
    try {
        mList = medicineDAO.getAllMedicines(); // Call get all from the DAO
    } catch (SQLException e) {
        jLblStatus.setText("Database Error! " + e.getMessage());
    }

    Vector rowDataVector = new Vector(); // Initialize a vector to store row data
    // Iterate through each item in the iList
    for (Medicine m : mList) {
        Vector<Object> cellVector = new Vector<>(); // Initialize cellVector for each item
        cellVector.add(m.getID());
        cellVector.add(m.getName());
        cellVector.add(m.getDosage());
        cellVector.add(m.getFormat());
        cellVector.add(m.getUnitSize());

         rowDataVector.add(cellVector);  //creates the vector row, by adding each cell in the row
        }      
        
        //initlize the JTable instance using the row data and column data vectors
        jTable1=new JTable(rowDataVector,colNameV);
        jScrollPane1.setViewportView(jTable1);
}
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnShowAll;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JComboBox<String> jCbFormat;
    private javax.swing.JComboBox<String> jCbMedID;
    private javax.swing.JComboBox<String> jCbUZ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLblStatus;
    private javax.swing.JLabel jLblTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTfDose;
    // End of variables declaration//GEN-END:variables
}
